name: CI

on:
  push:
    branches: [ main, chore/cloud-ready-audit ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Standardize on Node 20.x to match integration.yml
        node-version: [20.x] 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Use the more efficient caching strategy from integration.yml
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install root dependencies
        run: npm ci --legacy-peer-deps

      - name: Install server dependencies
        run: npm ci --legacy-peer-deps --prefix server

      - name: Check plain npm ci (non-blocking)
        run: |
          # This is a non-blocking check to detect if plain `npm ci` (without --legacy-peer-deps)
          # would fail for contributors. We do not fail the job here because the repo
          # currently relies on `--legacy-peer-deps` as a short-term workaround.
          if npm ci --ignore-scripts; then
            echo "npm ci without --legacy-peer-deps succeeded"
          else
            echo "::warning::npm ci failed without --legacy-peer-deps. Contributors: use 'npm ci --legacy-peer-deps' locally until dependencies are reconciled."
            # keep this step non-failing so PRs can run; this is an informational warning only
            exit 0
          fi

      # Run the main lint script from root package.json
      - name: Lint
        run: npm run lint

      - name: Build frontend
        run: npm run build

      - name: Run frontend tests
        run: npm run test:run --silent
        env:
          CI: true
          VITE_API_URL: http://localhost:3001

      # Run the 'test:ci' script from server/package.json
      - name: Run server tests
        run: npm run test:ci --prefix server --silent
        env:
          NODE_ENV: test
          CI: true
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_SERVICE_ROLE_KEY: test-service-role-key
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          JWT_SECRET: test-jwt-secret-key-for-testing-only
          OPENAI_API_KEY: sk-test-key-for-ci